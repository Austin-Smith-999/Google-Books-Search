{"version":3,"sources":["components/Header/index.js","utils/API.js","components/SearchForm/index.js","components/Card/index.js","components/BookList/index.js","containers/Search/index.js","components/SavedBookList/index.js","containers/Saved/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","react_router_dom","to","API","search","query","axios","get","getBooks","saveBooks","bookInfo","console","log","post","SearchForm","form","type","required","placeholder","onChange","handleInputChange","value","onClick","handleFormSubmit","Card","title","author","src","image","alt","summary","href","infoLink","BookList","state","index","this","books","path","volumeInfo","authors","description","imageLinks","thumbnail","then","res","alert","_this2","map","item","src_components_Card","key","clickSearch","Component","Search","results","searchBooks","_this","setState","data","items","catch","err","event","target","preventDefault","components_SearchForm","components_BookList","SavedBookList","link","img","Saved","savedBooks","components_SavedBookList","App","components_Header","react_router","containers_Saved","containers_Search","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2UAoBeA,MAXf,SAAgBC,GACZ,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEPH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,KAAV,UACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,UAAV,4BCTGC,EAAA,CACXC,OAAQ,SAAUC,GAClB,OAAOC,IAAMC,IAJF,iDAIeF,IAE1BG,SAAU,WACN,OAAOF,IAAMC,IAAI,eAErBE,UAAW,SAAUC,GAEjB,OADAC,QAAQC,IAAI,iCACLN,IAAMO,KAAK,aAAcH,KCAzBI,MAZf,SAAoBlB,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,cAAZ,2BAAwDlB,EAAAC,EAAAC,cAAA,WACxDF,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOD,KAAK,aAAaE,UAAQ,EAACC,YAAY,aAAaC,SAAUvB,EAAMwB,kBAAmBC,MAAOzB,EAAMyB,QAAQxB,EAAAC,EAAAC,cAAA,WAC/HF,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,SAASM,QAAS1B,EAAM2B,kBAArC,aCSDC,SAfF,SAAC5B,GACV,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,mBAAWH,EAAM6B,OACjB5B,EAAAC,EAAAC,cAAA,oBAAYH,EAAM8B,QAClB7B,EAAAC,EAAAC,cAAA,OAAK4B,IAAK/B,EAAMgC,MAAOC,IAAI,UAC3BhC,EAAAC,EAAAC,cAAA,yBAAiBH,EAAMkC,SACvBjC,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,KAAGgC,KAAMnC,EAAMoC,UAAWpC,EAAMoC,WAC9CnC,EAAAC,EAAAC,cAAA,UAAQuB,QAAS1B,EAAM0B,SAAvB,YC0BGW,6MAjCXC,MAAQ,8EAIIC,GACRxB,QAAQC,IAAI,eAAgBuB,GAC5BxB,QAAQC,IAAIwB,KAAKxC,MAAMyC,OACvB,IAAIC,EAAOF,KAAKxC,MAAMyC,MAAMF,GAAOI,WACnCpC,EAAIM,UAAU,CACVgB,MAAMa,EAAKb,MACXC,OAAOY,EAAKE,QACZC,YAAYH,EAAKG,YACjBb,MAAMU,EAAKI,WAAWC,UACtBX,SAASM,EAAKN,WAEjBY,KAAK,SAAAC,GAAG,OAAIlC,QAAQC,IAAI,aAAciC,KACtCD,KAAKE,MAAM,wDAGR,IAAAC,EAAAX,KACJ,OACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVoC,KAAKxC,MAAMyC,MAAMW,IAAI,SAACC,EAAMd,GAAP,OACtBtC,EAAAC,EAAAC,cAACmD,EAAD,CAAMC,IAAKhB,EAAOV,MAAOwB,EAAKV,WAAWd,MAAOC,OAAQuB,EAAKV,WAAWb,OACxEE,MAAOqB,EAAKV,WAAWG,WAAWC,UAAWF,YAAaQ,EAAKV,WAAWE,YAC1EnB,QAAS,kBAAMyB,EAAKK,YAAYjB,gBA1BzBkB,aC+CRC,6MA5CXpB,MAAQ,CACJG,MAAO,GACPjC,OAAQ,GACRmD,QAAS,MAObC,YAAY,SAAAnD,GACRM,QAAQC,IAAI,gBAAgBP,GAC5BF,EAAIC,OAAOC,GACVuC,KAAK,SAAAC,GACFlC,QAAQC,IAAI,iBACZ6C,EAAKC,SAAS,CAACrB,MAAOQ,EAAIc,KAAKC,QAC/BjD,QAAQC,IAAI,cAAe6C,EAAKvB,SAEnC2B,MAAM,SAAAC,GAAG,OAAInD,QAAQC,IAAIkD,QAG9B1C,kBAAkB,SAAA2C,GACdN,EAAKC,SAAS,CAACtD,OAAQ2D,EAAMC,OAAO3C,WAGxCE,iBAAiB,SAAAwC,GACbA,EAAME,iBACNR,EAAKD,YAAYC,EAAKvB,MAAM9B,8HAI5B,OACIP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACmE,EAAD,CACA3C,iBAAkBa,KAAKb,iBACvBH,kBAAmBgB,KAAKhB,oBAExBvB,EAAAC,EAAAC,cAACoE,EAAD,CAAU9B,MAAOD,KAAKF,MAAMG,gBAvCvBgB,aCwBNe,oNAzBXlC,MAAM,2EAGF,OACIrC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAAA,OAAMC,UAAU,kBACfoC,KAAKxC,MAAMyC,MAAMW,IAAI,SAACC,EAAMd,GAAP,OACtBtC,EAAAC,EAAAC,cAACmD,EAAD,CAAMC,IAAKhB,EAAOV,MAAOwB,EAAKxB,MAAOC,OAAQuB,EAAKT,QAAS6B,KAAMpB,EAAKoB,KAAMzC,MAAOqB,EAAKqB,IAAKxC,QAASmB,EAAKR,yBAX3FY,cCoBbkB,6MAnBXrC,MAAQ,CACJsC,WAAY,uFAGI,IAAAzB,EAAAX,KAChBjC,EAAIK,WACHoC,KAAK,SAAAC,GAAG,OAAIE,EAAKW,SAAS,CAACc,WAAW3B,EAAIc,0CAI3C,OACI9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0E,EAAD,CAAepC,MAAOD,KAAKF,MAAMsC,qBAb7BnB,qBCiCLqB,0LArBb,OACE7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACLH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACJJ,EAAAC,EAAAC,cAAC4E,EAAD,MACF9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACE/E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOtC,KAAK,UACVzC,EAAAC,EAAAC,cAAC8E,EAAD,OAEFhF,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOtC,KAAK,KACVzC,EAAAC,EAAAC,cAAC+E,EAAD,iBAXMzB,cCJZ0B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT1C,KAAK,SAAA8C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1D,QACfqD,UAAUC,cAAcO,WAK1BpF,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBiD,MAAM,SAAAmC,GACLrF,QAAQqF,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAoB,OAAMH,GAAN,sBAENxB,EAwCX,SAAiCO,GAE/BqB,MAAMrB,GACH1C,KAAK,SAAAgE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQvG,IAAI,gBAAgBwG,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAMpE,KAAK,SAAA8C,GACjCA,EAAauB,aAAarE,KAAK,WAC7BqC,OAAOC,SAASgC,aAKpB7B,EAAgBC,KAGnBzB,MAAM,WACLlD,QAAQC,IACN,mEAzDAuG,CAAwB7B,GAHxBD,EAAgBC,MC7BxB8B","file":"static/js/main.6ff86bc6.chunk.js","sourcesContent":["import React from 'react';  \r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n    return(\r\n    <div className=\"header\">\r\n            \r\n            <Link to= \"/\">Search</Link>\r\n            <Link to= \"/saved\">Saved</Link>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","// axios calls from API\r\nimport axios from \"axios\";\r\n\r\nconst ApiUrl = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n\r\nexport default {\r\n    search: function (query) {\r\n    return axios.get(ApiUrl + query);    \r\n    },\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\")\r\n    },\r\n    saveBooks: function (bookInfo) {\r\n        console.log(\"save books function working!!\");\r\n        return axios.post(\"/api/books\", bookInfo);\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nfunction SearchForm(props) {\r\n    return(\r\n        <div className=\"searchContainer\">\r\n            <h2>Book Search</h2>\r\n            <form className=\"bookSearch\">\r\n                <label form=\"bookSearch\">Enter a book to search.</label><br/>\r\n                <input type=\"text\" form=\"booksearch\" required placeholder=\"Book title\" onChange={props.handleInputChange} value={props.value}/><br/>\r\n                <button type=\"submit\" onClick={props.handleFormSubmit}>Submit</button>               \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchForm;","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n    <div className=\"card\">\r\n        <div className=\"img-container\">\r\n            <p>Title: {props.title}</p>\r\n            <p>Author: {props.author}</p>\r\n            <img src={props.image} alt=\"Image\"/>\r\n            <p>Description: {props.summary}</p>\r\n            <p>Info Link: <a href={props.infoLink}>{props.infoLink}</a></p>\r\n            <button onClick={props.onClick}>Save</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\r\nimport API from '../../utils/API';\r\nimport Card from '../Card';\r\n\r\nclass BookList extends Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    clickSearch(index) {\r\n        console.log(\"index worked\", index);\r\n        console.log(this.props.books);\r\n        var path = this.props.books[index].volumeInfo;\r\n        API.saveBooks({\r\n            title:path.title,\r\n            author:path.authors,\r\n            description:path.description,\r\n            image:path.imageLinks.thumbnail,\r\n            infoLink:path.infoLink\r\n        })\r\n        .then(res => console.log(\"book saved\", res))\r\n        .then(alert(\"This book is saved\"));\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"book-something\">\r\n                {this.props.books.map((item, index) => \r\n                <Card key={index} title={item.volumeInfo.title} author={item.volumeInfo.author}\r\n                image={item.volumeInfo.imageLinks.thumbnail} description={item.volumeInfo.description}  \r\n                onClick={() => this.clickSearch(index)}\r\n                />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookList;","import React, {Component} from 'react';\r\nimport API from '../../utils/API';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport BookList from '../../components/BookList';\r\n\r\n\r\nclass Search extends Component{\r\n    state = {\r\n        books: [],\r\n        search: \"\",\r\n        results: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    \r\n    searchBooks=query => {\r\n        console.log(\"query worked!\",query);\r\n        API.search(query)\r\n        .then(res => {\r\n            console.log(\".then worked!\");\r\n            this.setState({books: res.data.items});\r\n            console.log(\"data worked\", this.state);\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    handleInputChange=event => {\r\n        this.setState({search: event.target.value})\r\n    }\r\n\r\n    handleFormSubmit=event => {\r\n        event.preventDefault();\r\n        this.searchBooks(this.state.search);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Search for book.</h1>\r\n                <SearchForm \r\n                handleFormSubmit={this.handleFormSubmit}\r\n                handleInputChange={this.handleInputChange}\r\n                />\r\n                <BookList books={this.state.books} />\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport Card from '../Card';\r\nimport './style.css';\r\n\r\nclass SavedBookList extends Component{\r\n    state={};\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n    \r\n            <h1>Reading List</h1>\r\n    \r\n            <div  className=\"book-something\" >\r\n            {this.props.books.map((item, index) => \r\n            <Card key={index} title={item.title} author={item.authors} link={item.link} image={item.img} summary={item.description} />)}\r\n            </div>\r\n           \r\n    \r\n          </div>\r\n            )\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SavedBookList;","import React, {Component} from 'react';\r\nimport SavedBookList from '../../components/SavedBookList';\r\nimport API from '../../utils/API';\r\n\r\nclass Saved extends Component{\r\n    state = {\r\n        savedBooks: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getBooks()\r\n        .then(res => this.setState({savedBooks:res.data}))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <SavedBookList books={this.state.savedBooks}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Saved;","import React, { Component } from \"react\";\n// import Card from \"./components/Card\";\nimport Header from './components/Header';\n// import Card from './components/Card'\nimport Search from './containers/Search';\nimport Saved from './containers/Saved';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component{\nrender() {\n  return (\n    <div className=\"App\">\n              <Router>\n          <Header></Header>\n        <Switch>\n          <Route path=\"/Saved\">\n            <Saved />\n          </Route>\n          <Route path=\"/\">\n            <Search />\n          </Route>\n        </Switch>\n        </Router>\n      {/* <Card /> */}\n    </div>\n    \n\n  );\n}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}